PG_GRID_GLOBE


 PURPOSE:
	Computes image points on a latitude/longitude grid for objects that 
	are a subclass of GLOBE.


 CATEGORY:
	NV/PG


 CALLING SEQUENCE:
	grid_ps = pg_grid_globe(cd=cd, gbx=gbx)
	grid_ps = pg_grid_globe(gd=gd)


 ARGUMENTS:
  INPUT: NONE

  OUTPUT: NONE


 KEYWORDS:
  INPUT:
	cd:	Array (n_timesteps) of camera descriptors.

	gbx:	Array (n_objects, n_timesteps) of descriptors of objects 
		which must be a subclass of GLOBE.

	gd:	Generic descriptor.  If given, the cd and gbx inputs 
		are taken from the cd and gbx fields of this structure
		instead of from those keywords.

	lat:	Array giving grid-line latitudes in radians.

	lon:	Array giving grid-line longitudes in radians.

	nlat:	Number of equally-spaced latitude lines to generate if keywor
		lat not given.  Default is 12.

	flat:	This reference latitude line will be one of the latitude lines generated 
		if nlat is specified.  Default is zero.

	nlon:	Number of equally-spaced longitude lines to generate if keyword
		lon not given.  Default is 12.

	flon:	This reference longitude line will be one of the longitude lines generated 
		if nlon is specified.  Default is zero.

	fov:	 If set points are computed only within this many camera
		 fields of view.

	cull:	 If set, points structures excluded by the fov keyword
		 are not returned.  Normally, empty points structures
		 are returned as placeholders.

	npoints: Number of points to compute in each latitude or longitude line,
		 per 2*pi radians; default is 360.


  OUTPUT: 
	lat:	Array giving grid-line latitudes in radians.

	lon:	Array giving grid-line longitudes in radians.

	plat_ps:	pg_points_struct giving the image coordinates of the
			intersection of the each latitude line with the 
			reference longitude line.  These points can be used to draw
			labels for the latitude lines. 

	plon_ps:	pg_points_struct giving the image coordinates of the
			intersection of the each longitude line with the 
			reference latitude line.


 RETURN:
	Array (n_objects) of pg_points_struct containing image points and
	the corresponding inertial vectors.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 2/1998
	
