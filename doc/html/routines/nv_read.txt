NV_READ


 PURPOSE:
	Reads a data file of arbitrary format and produces a data descriptor.


 CATEGORY:
	NV/SYS


 CALLING SEQUENCE:
	dd = nv_read(filespec [, data, header])


 ARGUMENTS:
  INPUT:
	filespec:	Array of strings giving file specifications for
			file to read.

  OUTPUT:
	data:		Data array from the last file read.  This is provided
			as a convenience when reading single files so that
			it is not necessary to call nv_data to get the array.

	header:		Header array from the last file read.  This is provided
			as a convenience when reading single files so that
			it is not necessary to call nv_header to get the array.


 KEYWORDS:
  INPUT:
	filetype:	Overrides automatic filetype detection.

	input_fn:	Overrides input function lookup.

	output_fn:	Overrides output function lookup.

	tab_translators:	Name of translators table to use instead of 
				that given by the environment variable
				NV_TRANSLATORS.  If no path is given, then the
				file is assumed to reside in the same directory
				as the translator named by the NV_TRANSLATORS
				environment variable.

	input_translator:	Use this input translator name instead of
				looking it up in the table.

	output_translator:	Use this output translator name instead of
				looking it up in the table.

	instrument:	Use this instrument name instead of attempting to 
			detect it.

	silent:		If set, nv_read suppresses superfluous printed output
			and passes the flag to the input function.

	sample:		Vector giving the sampling indices in the input data 
			file.  This parameter is passed through to the input 
			function, which may choose to ignore it.

	extensions:	If given, these extensions are attempted for each file.
			If a file with the extension is not found, then the next
			extension is tried until no extensions are left to try.
			If no extensions work, then the raw filename is attemtped.


  OUTPUT: NONE


  ENVIRONMENT VARIABLES:
	NV_TRANSLATORS:		Name(s) of the translators table(s) to use unless 
				overridden by the tab_translators keyword.
				Multiple table names are delimited with ':'.

	NV_FTP_DETECT:		Name(s) of the filetype detectors table(s).		
				Multiple table names are delimited with ':'.

	NV_IO:			Name(s) of the I/O table(s).		
				Multiple table names are delimited with ':'.

	NV_INS_DETECT:		Name(s) of the instrument detectors table(s).			
				Multiple table names are delimited with ':'.


 RETURN:
	Array of data descriptors - one for each file resulting from the
	expansion of the given file specifications.


 RESTRICTIONS:
	Under unix, the IDL findfile routine does not expand the ~ symbol,
	but openr does.  In order to salvage some functionality, nv_read 
	allows filespecs to pass even if they don't expand to anything using
	findfile.  In this way, a filespec contianing ~ can be properly
	expanded, but only if it expands to one filename.  If it expands
	to multiple filenames, then openr will choke on it.


 PROCEDURE:
	nv_read expands all file specifications and then attempts to detect
	the filetype for each resulting filename using the filetype detectors
	table.  If a filetype is detected, nv_read looks up the I/O functions
	and calls the input function to read the file.  Finally, it calls
	nv_init_descriptor to obtain a data descriptor.  


 STATUS:
	Complete


 SEE ALSO:
	nv_write


 MODIFICATION HISTORY:
 	Written by:	Spitale, 2/1998
	
