									12/05/15
GLB Program Reference
=====================

 Summary
 -------
  - GLB_ALBEDO
       Returns the bond albedo for each given globe descriptor.

  - GLB_ALTAZ_TO_LOCAL
       Converts the given column vectors from the altaz coordinate
       system to the local coordinate system. 

  - GLB_BODY
	Returns the body descriptor for each given globe descriptor.

  - GLB_BODY_TO_GLOBE
       Transforms the given column vectors from the body coordinate
       system to the globe coordinate system.

  - GLB_BODY_TO_LOCAL
       Converts the given column vectors from the body coordinate
       system to the local coordinate system.

  - GLB_CLONE_DESCRIPTOR
       Allocates new globe descriptors as copies of the given
       (existing) globe descriptors.

  - GLB_COPY_DESCRIPTOR
	Copies all fields from the source globe descriptors into the
       destination globe descriptors.

  - GLB_EVOLVE
       Computes new globe descriptors at the given time offsets from
       the given globe descriptors using the taylor series expansion
       corresponding to the derivatives contained in the given globe
       descriptor.

  - GLB_GET_CUSP_POINTS
	Iteratively computes the two points that occupy the limb from two 
	different viewpoints for each given globe object.

  - GLB_GET_LIMB_POINTS
	Iteratively computes the points on the limb for each given globe 
	object.

  - GLB_GET_RADIUS
	Computes the local radius of a GLOBE object at the given lat/lon.

  - GLB_GET_RANGES
	Returns ranges of valid coordinates for the given GLOBE object.

  - GLB_GET_SURFACE_NORMAL
	Computes the surface normal of a GLOBE object at the given 
	lat/lon position.

  - GLB_GET_SURFACE_NORMAL
	Computes the surface normals of a GLOBE object at the given 
	body-frame positions.

  - GLB_GET_SURFACE_NORMAL_BODY
	Computes the surface normal of a GLOBE object at the given 
	position in the BODY frame.

  - GLB_GLOBE_TO_BODY
       Transforms the given column vectors from the globe coordinate
       system to the body coordinate system.

  - GLB_GLOBE_TO_GRAPHIC
       Converts the given vectors from the globe coordinate
       system to the graphic coordinate system.

  - GLB_GM
       Returns the GM value for each given globe descriptor.

  - GLB_GRAPHIC_TO_GLOBE
       Converts the given vectors from the graphic coordinate
       system to the globe coordinate system.

  - GLB_HIDE_POINTS
	Hides points that are obscured by a GLOBE with respect to a given 
	viewpoint.

  - GLB_HIDE_POINTS_LIMB
	Hides points lying on the surface of a GLOBE object that are 
	obscured by the limb with respect to a given viewpoint.

  - GLB_INIT_DESCRIPTORS
	Init method for the GLOBE class.

  - GLB_INTERSECT
	Computes the intersection of rays with GLOBE objects.

  - GLB_INTERSECT_PLANE
	Computesthe intersection of a plane with a GLOBE object.

  - GLB_J
       Returns the zonal harmonics for each given globe descriptor.

  - GLB_LOCAL_TO_ALTAZ
       Converts the given column vectors from the local coordinate
       system to the altaz coordinate system. 

  - GLB_LOCAL_TO_BODY
       Converts the given column vectors from the local coordinate
       system to the body coordinate system.

  - GLB_LORA
	Returns the longitude of the first ellipsoid radius for each 
	given globe descriptor.

  - GLB_LREF
       Returns the longitude system reference for each given globe
       descriptor.

  - GLB_MASS
       Returns the mass for each given globe descriptor.

  - GLB_NJ
	Returns an integer indicating the maximum number of zonal harmonics
	allowed in the 'j' field of the globe descriptor.  This number
	can be adjusted using the environment variable 'GLB_NJ'.  The default
	is 11.

  - GLB_NPHT
	Returns an integer indicating the maximum number of parameters
	allowed in the refl_parm and phase-parm fields of the globe 
	descriptor.  This number can be adjusted using the environment 
	variable 'GLB_NPHT'.  The default is 4.

  - GLB_PHASE
	Computes a phase function.

  - GLB_PHASE_FN
       Returns the name of the phase function for each given globe 
	descriptor.

  - GLB_PHASE_PARM
       Returns the phase function parameters for each given globe descriptor.

  - GLB_RADII
       Returns the triaxial radii for each given globe descriptor.

  - GLB_REFL
	Computes a reflection function.

  - GLB_REFL_FN
       Returns the name of the reflection function for each given globe 
	descriptor.

  - GLB_REFL_PARM
       Returns the reflection function parameters for each given globe 
	descriptor.

  - GLB_REPLICATE
	Replicates the given globe descriptor, producing an array of the given
	dimensions containing cloned versions of the input descriptor.

  - GLB_RM_POINTS
	Hides points that are obscured by, or that obscure a GLOBE with 
	respect to a given viewpoint.

  - GLB_RREF
       Returns the reference radius for each given globe descriptor.

  - GLB_SET_ALBEDO
       Replaces the bond albedo for each given globe descriptor.

  - GLB_SET_BODY
	Replaces the body descriptor in each given globe descriptor.

  - GLB_SET_GM
       Replaces the GM value for each given globe descriptor.

  - GLB_SET_J
       Replaces the zonal harmonics for each given globe descriptor.

  - GLB_SET_LORA
       Replaces the longitude of the first ellipsoid radius for each
       given globe descriptor.

  - GLB_SET_LREF
       Replaces the longitude system reference for each given globe
       descriptor.

  - GLB_SET_MASS
       Replaces the mass for each given globe descriptor.

  - GLB_SET_PHASE_FN
       Replaces the phase function for each given globe descriptor.

  - GLB_SET_RADII
       Replaces the triaxial radii for each given globe descriptor.

  - GLB_SET_REFL_FN
       Replaces the reflection function for each given globe descriptor.

  - GLB_SET_RREF
       Replaces the reference radius for each given globe descriptor.

  - GLB_SET_TYPE
       Replaces the type string for each given globe descriptor.

  - GLB_SUB_POINT
	Computes the planetocentric sub-point in body coordinates.

  - GLB_SUB_POINT_GRAPHIC
	Computes the planetographic sub-point in body coordinates.

  - GLB_TYPE
       Returns the type string for each given globe descriptor.

  - GLOBE_DESCRIPTOR__DEFINE
	Class structure fo the GLOBE class.


















































GLB_ALBEDO
----------


 PURPOSE:
       Returns the bond albedo for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_albedo(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nt) of albedos associated with each given globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	


























GLB_ALTAZ_TO_LOCAL
------------------


 PURPOSE:
       Converts the given column vectors from the altaz coordinate
       system to the local coordinate system. 


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	local_dir = glb_altaz_to_local(gbx, surf_pts, altaz_dir)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	surf_pts:	Array (nv,3,nt) of column vectors in the body
                       frame (representing points on the surface of 
                       the globe).

       altaz_dir:      Array (3,nt) of column vectors in the altaz
                       system, giving the direction from each surface point.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the local system.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	


















GLB_BODY
--------


 PURPOSE:
	Returns the body descriptor for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	bd = glb_body(gbx)


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
	Body descriptor associated with each given globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	


























GLB_BODY_TO_GLOBE
-----------------


 PURPOSE:
       Transforms the given column vectors from the body coordinate
       system to the globe coordinate system.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	globe_pts = glb_body_to_globe(gbx, body_pts)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	body_pts:	Array (nv,3,nt) of column vectors in the body frame.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the globe frame.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	























GLB_BODY_TO_LOCAL
-----------------


 PURPOSE:
       Converts the given column vectors from the body coordinate
       system to the local coordinate system.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	local_dir = glb_body_to_local(gbx, body_pts, body_dir)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	body_pts:	Array (nv,3,nt) of column vectors in the body
                       frame (representing points on the surface of 
                       the globe).

       body_dir:       Array (3,nt) of column vectors in the body
                       frame, giving the direction from each surface point.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the local system.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	


















GLB_CLONE_DESCRIPTOR
--------------------


 PURPOSE:
       Allocates new globe descriptors as copies of the given
       (existing) globe descriptors.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	new_gbd = glb_clone_descriptor(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN: 
       Newly created globe descriptors with all fields identical to
       the input descriptors.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale
	
























GLB_COPY_DESCRIPTOR
-------------------


 PURPOSE:
	Copies all fields from the source globe descriptors into the
       destination globe descriptors.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_copy_descriptor, gbx_dst, gbx_src


 ARGUMENTS:
  INPUT:
	gbx_dst:	Array (nt) of any subclass of GLOBE descriptors to copy to.

	gbx_src:	Array (nt) of any subclass of GLOBE descriptors to copy from.


  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale
	























GLB_EVOLVE
----------


 PURPOSE:
       Computes new globe descriptors at the given time offsets from
       the given globe descriptors using the taylor series expansion
       corresponding to the derivatives contained in the given globe
       descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	gbxt = glb_evolve(gbx, dt)


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (ngd) of any subclass of GLOBE descriptors.

	dt:	 Array (ndt) of time offsets.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: 
	nodv:	 If set, velocities will not be evolved.


  OUTPUT: NONE


 RETURN:
       Array (ngd,ndt) of newly allocated globe descriptors evolved
       by time dt, where ngd is the number of gbx, and ndt is the
       number of dt.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

















GLB_GET_CUSP_POINTS
-------------------


 PURPOSE:
	Iteratively computes the two points that occupy the limb from two 
	different viewpoints for each given globe object.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	cusp_pts = glb_get_cusp_points(gbx, r1, r2, epsilon, niter)


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	r1, r2:	 Arrays (1,3,nt) of viewer positions in the BODY frame.

	epsilon:	Controls the precision of the iteration.  Default
			is 1d-3.

	niter:	Maximum number of iterations, default is 1000


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (2, 3, nt) of cusp points in the BODY frame.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

















GLB_GET_LIMB_POINTS
-------------------


 PURPOSE:
	Iteratively computes the points on the limb for each given globe 
	object.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	limb_pts = glb_get_limb_points(gbx, r, np, epsilon, niter)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	r:	Array (1,3,nt) giving viewer position in the BODY frame.

	np:	Number of points to compute around the limb.

	epsilon:	Controls the precision of the iteration.  Default
			is 1d-3.

	niter:	Maximum number of iterations, default is 1000


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: 
	alpha:	Array (np) of azimuths for each output point.


 RETURN: 
	Array (np, 3, nt) of limb points in the BODY frame.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	














GLB_GET_RADIUS
--------------


 PURPOSE:
	Computes the local radius of a GLOBE object at the given lat/lon.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	radius = glb_get_radius(gbx, lat, lon)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	lat:	Array (nv) of latitudes.

	lon:	Array (nv) of longitudes.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (nv, nt) of radius values.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	





















GLB_GET_RANGES
--------------


 PURPOSE:
	Returns ranges of valid coordinates for the given GLOBE object.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	ranges = glb_get_ranges(gbx)


 ARGUMENTS:
  INPUT:
	bx:	 Any subclass of GLOBE.


  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
	Array (2 x 3) giving the ranges in globe coordinates.


 MODIFICATION HISTORY:
 	Written by:	Spitale
	





























GLB_GET_SURFACE_NORMAL
----------------------


 PURPOSE:
	Computes the surface normal of a GLOBE object at the given 
	lat/lon position.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	n = glb_get_surface_normal_body(gbx, lat, lon)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	lat:	Array (nv) of latitudes.

	lon:	Array (nv) of longitudes.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (nv, 3, nt) of surface normals in the BODY frame.  Note that 
	the output vectors are not normalized.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	



















GLB_GET_SURFACE_NORMAL
----------------------


 PURPOSE:
	Computes the surface normals of a GLOBE object at the given 
	body-frame positions.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	n = glb_get_surface_normal(gbx, r)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	r:	Array (nv,3) of surface positions in the BODY frame.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (nv, 3, nt) of surface unit normals in the BODY frame.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	






















GLB_GET_SURFACE_NORMAL_BODY
---------------------------


 PURPOSE:
	Computes the surface normal of a GLOBE object at the given 
	position in the BODY frame.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	n = glb_get_surface_normal_body(gbx, v)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	v:	Array (nv,3) of BODY-frame vectors.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (nv, 3, nt) of surface normals in the BODY frame.  Note that 
	the output vectors are not normalized.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	





















GLB_GLOBE_TO_BODY
-----------------

 PURPOSE:
       Transforms the given column vectors from the globe coordinate
       system to the body coordinate system.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	body_pts = glb_globe_to_body(gbx, globe_pts)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	globe_pts:	Array (nv,3,nt) of column vectors in the globe frame.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the body frame.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_GLOBE_TO_GRAPHIC
--------------------


 PURPOSE:
       Converts the given vectors from the globe coordinate
       system to the graphic coordinate system.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	graphic_pts = glb_globe_to_graphic(gbx, globe_pts)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	globe_pts:	Array (nv,3,nt) of column vectors in the globe system.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the graphic system.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	























GLB_GM
------


 PURPOSE:
       Returns the GM value for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	gm = glb_gm(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nt) of GM values associated with each given globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	


























GLB_GRAPHIC_TO_GLOBE
--------------------


 PURPOSE:
       Converts the given vectors from the graphic coordinate
       system to the globe coordinate system.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	globe_pts = glb_graphic_to_globe(gbx, graphic_pts)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	graphic_pts:	Array (nv,3,nt) of column vectors in the graphic system.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the globe system.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	























GLB_HIDE_POINTS
---------------


 PURPOSE:
	Hides points that are obscured by a GLOBE with respect to a given 
	viewpoint.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	sub = glb_hide_points(gbx, r, p)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	r:	Columns vector givnng the BODY-frame position of the viewer.

	p:	Array (nv) of BODY-frame vectors giving the points to hide.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Subscripts of the points in p that are hidden by the object.  


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	




















GLB_HIDE_POINTS_LIMB
--------------------


 PURPOSE:
	Hides points lying on the surface of a GLOBE object that are 
	obscured by the limb with respect to a given viewpoint.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	sub = glb_hide_points_limb(gbx, r, p)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	r:	Columns vector givnng the BODY-frame position of the viewer.

	p:	Array (nv) of BODY-frame vectors giving the points to hide.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Subscripts of the points in p that are hidden by the object.  
	Note that this routine is only valid for points that lie on
	the surface of the globe.  This routine is faster than
	glb_hide_points.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

















GLB_INIT_DESCRIPTORS
--------------------


 PURPOSE:
	Init method for the GLOBE class.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	gbd = glb_init_descriptors(n)


 ARGUMENTS:
  INPUT:
	n:	Number of descriptors to create.

  OUTPUT: NONE


 KEYWORDS (in addition to those accepted by all superclasses):
  INPUT:  
	gbd:	Globe descriptor(s) to initialize, instead of creating a new one.

	bd:	Body descriptor(s) to pass to bod_init_descriptors.

	crd:	Core descriptor(s) to pass to cor_init_descriptors.

	type:	Array (n) of type strings.

	lref:	Array (n) of longitude reference notes.

	radii:	Array (3,n) of ellipsoid radii.

	lora:	Array (n) giving longitudes  first ellipsoid radius.

	rref:	Array (n) of reference radii.

	J:	Array (n,nj) of zonal harmonics.

	GM:	Array (n) of masses x gravitiational constant.

	mass:	Array (n) of masses.

	phase_fn: Array (n) of phase function names.

	phase_parm:	Array (npht,n) of phase function parameters.

	refl_fn: Array (n) of reflection function names.

	refl_parm:	Array (npht,n) of reflection function parameters.

	albedo:	Array (n) of bond albedos.


  OUTPUT: NONE


 RETURN:
	Newly created or or freshly initialized globe descriptors, depending
	on the presence of the bd keyword.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	



























































GLB_INTERSECT
-------------


 PURPOSE:
	Computes the intersection of rays with GLOBE objects.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	int_pts = glb_intersect(gbx, v, r)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	v:	Array (nv,3,nt) giving ray origins in the BODY frame.

	r:	Array (nv,3,nt) giving ray directions in the BODY frame.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (2*nv,3,nt) of points in the BODY frame, where 
	int_pts[0:nv-1,*,*] correspond to the near-side intersections
	and int_pts[nv:2*nv-1,*,1] correspond to the far side.  Zero 
	vector is returned for points with no solution.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	


















GLB_INTERSECT_PLANE
-------------------


 PURPOSE:
	Computesthe intersection of a plane with a GLOBE object.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	int_pts = glb_intersect_plane(gbx, v, n)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	v:	Array (1,3,nt) giving plane origins in the BODY frame.

	n:	Array (1,3,nt) giving the plane unit normals in the 
		BODY frame.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (np,3,nt) of points in the BODY frame, np is the number of 
	points on the curve of intersection.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	



















GLB_J
-----


 PURPOSE:
       Returns the zonal harmonics for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_j(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nj,nt) of zonal harmonics associated with each given globe 
	descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_LOCAL_TO_ALTAZ
------------------

 PURPOSE:
       Converts the given column vectors from the local coordinate
       system to the altaz coordinate system. 


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	altaz_dir = glb_local_to_altaz(gbx, surf_pts, local_dir)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	surf_pts:	Array (nv,3,nt) of column vectors in the body
                       frame (representing points on the surface of 
                       the globe).

       local_dir:      Array (3,nt) of column vectors in the local
                       frame, giving the direction from each surf_pts.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the altaz system.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	



















GLB_LOCAL_TO_BODY
-----------------

 PURPOSE:
       Converts the given column vectors from the local coordinate
       system to the body coordinate system.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	body_dir = glb_local_to_body(gbx, body_pts, local_dir)


 ARGUMENTS:
  INPUT: 
	gbx:	        Array (nt) of any subclass of GLOBE descriptors.

	body_pts:	Array (nv,3,nt) of column vectors in the body
                       frame (representing points on the surface of 
                       the globe).

       local_dir:      Array (3,nt) of column vectors in the local
                       system, giving the direction from each surface point.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN:
       Array (nv,3,nt) of column vectors in the body frame.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	



















GLB_LORA
--------


 PURPOSE:
	Returns the longitude of the first ellipsoid radius for each 
	given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	lora = glb_lora(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Longitude of the first ellipsoid radius associated with each
       given globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_LREF
--------


 PURPOSE:
       Returns the longitude system reference for each given globe
       descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	lref = glb_lref(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Longitude system reference associated with each given globe
       descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_MASS
--------


 PURPOSE:
       Returns the mass for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_mass(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nt) of mass values associated with each given globe 
	descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_NJ
------


 PURPOSE:
	Returns an integer indicating the maximum number of zonal harmonics
	allowed in the 'j' field of the globe descriptor.  This number
	can be adjusted using the environment variable 'GLB_NJ'.  The default
	is 11.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	nj = glb_nj()


 ARGUMENTS:
  INPUT: NONE

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE


  OUTPUT: NONE


 RETURN:
	Current nj value.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	























GLB_NPHT
--------


 PURPOSE:
	Returns an integer indicating the maximum number of parameters
	allowed in the refl_parm and phase-parm fields of the globe 
	descriptor.  This number can be adjusted using the environment 
	variable 'GLB_NPHT'.  The default is 4.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	npht = glb_npht()


 ARGUMENTS:
  INPUT: NONE

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE


  OUTPUT: NONE


 RETURN:
	Current npht value.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	























GLB_PHASE
---------


 PURPOSE:
	Computes a phase function.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	phase = glb_phase(gbd, mu, mu0)


 ARGUMENTS:
  INPUT:
	gbd:	 Globe descriptor.

	mu:	 Cosine of the emission angle.

	mu0:	 Cosine of the incidence angle.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
	Phase function value for the given mu and mu0 parameters.


 PROCEDURE:
	The function indicated by the phase_fn field of the globe descriptor
	is called and its return value is passed through to the caller of
	glb_phase.  


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale
	
















GLB_PHASE_FN
------------


 PURPOSE:
       Returns the name of the phase function for each given globe 
	descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_phase_fn(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nt) of phase function names associated with each given globe 
	descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_PHASE_PARM
--------------


 PURPOSE:
       Returns the phase function parameters for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_phase_parm(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (npht,nt) of phase function parameters associated with each 
	given globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_RADII
---------


 PURPOSE:
       Returns the triaxial radii for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	radii = glb_radii(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Triaxial radii associated with each given globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	


























GLB_REFL
--------


 PURPOSE:
	Computes a reflection function.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	refl = glb_refl(gbd, mu, mu0)


 ARGUMENTS:
  INPUT:
	gbd:	 Globe descriptor.

	mu:	 Cosine of the emission angle.

	mu0:	 Cosine of the incidence angle.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
	Refletion function value for the given mu and mu0 parameters.


 PROCEDURE:
	The function indicated by the refl_fn field of the globe descriptor
	is called and its return value is passed through to the caller of
	glb_phase.  


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale
	
















GLB_REFL_FN
-----------


 PURPOSE:
       Returns the name of the reflection function for each given globe 
	descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_refl_fn(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nt) of reflection function names associated with each given 
	globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_REFL_PARM
-------------


 PURPOSE:
       Returns the reflection function parameters for each given globe 
	descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_refl_parm(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (npht,nt) of reflection function parameters associated with 
	each given globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_REPLICATE
-------------


 PURPOSE:
	Replicates the given globe descriptor, producing an array of the given
	dimensions containing cloned versions of the input descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	new_gbx = cam_replicate(gbx, dim)


 ARGUMENTS:
  INPUT:
	gbx:	 One descriptor of any subclass of GLOBE descriptor

	dim:	 Dimensions of the result.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
	Array of the given dimensions containing cloned versions of the input 
	globe descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale
	






















GLB_RM_POINTS
-------------


 PURPOSE:
	Hides points that are obscured by, or that obscure a GLOBE with 
	respect to a given viewpoint.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	sub = glb_rm_points(gbx, r, p)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	r:	Columns vector givnng the BODY-frame position of the viewer.

	p:	Array (nv) of BODY-frame vectors giving the points to hide.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Subscripts of the points in p that are hidden by, or hide the 
	object.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	



















GLB_RREF
--------


 PURPOSE:
       Returns the reference radius for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	mass = glb_rref(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nt) of reference radii associated with each given globe 
	descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_ALBEDO
--------------


 PURPOSE:
       Replaces the bond albedo for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_albedo, gbx, albedo


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	albedo:	 Array (nt) of new bond albedos.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_BODY
------------


 PURPOSE:
	Replaces the body descriptor in each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_body, gbx, bd


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	bd:	 Array (nt) of BODY descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_GM
----------


 PURPOSE:
       Replaces the GM value for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_gm, gbx, gm


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	gm:	 Array (nt) of new GM values.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_J
---------


 PURPOSE:
       Replaces the zonal harmonics for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_j, gbx, j


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	j:	 Array (nj,nt) of new zonal harmonics.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_LORA
------------


 PURPOSE:
       Replaces the longitude of the first ellipsoid radius for each
       given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_lora, gbx, lora


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	lora:	 Array (nt) of new longitude values of the first ellipsoid radius.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_SET_LREF
------------


 PURPOSE:
       Replaces the longitude system reference for each given globe
       descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_lref, gbx, lref


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	lref:	 String array (nt) of new longitude system names.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	
























GLB_SET_MASS
------------


 PURPOSE:
       Replaces the mass for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_mass, gbx, mass


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	j:	 Array (nj,nt) of new masses.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_PHASE_FN
----------------


 PURPOSE:
       Replaces the phase function for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_phase_fn, gbx, phase_fn


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	phase_fn: Array (nt) of new phase functions.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_RADII
-------------


 PURPOSE:
       Replaces the triaxial radii for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_radii, gbx, radii


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	radii:	 Array (3,nt) of new triaxial radii.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_REFL_FN
---------------


 PURPOSE:
       Replaces the reflection function for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_refl_fn, gbx, refl_fn


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	refl_fn: Array (nt) of new reflection functions.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_RREF
------------


 PURPOSE:
       Replaces the reference radius for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_rref, gbx, rref


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	rref:	 String array (nt) of new reference radii.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SET_TYPE
------------


 PURPOSE:
       Replaces the type string for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	glb_set_type, gbx, type


 ARGUMENTS:
  INPUT: 
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

	type:	 String array (nt) of new type strings.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: NONE


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLB_SUB_POINT
-------------


 PURPOSE:
	Computes the planetocentric sub-point in body coordinates.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	n = glb_sub_point(gbx, r)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	r:	Array (nv,3,nt) of points in the BODY frame.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (nv,3,nt) points in the BODY frame that lie on the surface
	of each globe, directly 'beneath' r, i.e., such that each 
	planetocentric surface normal points at each r.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	





















GLB_SUB_POINT_GRAPHIC
---------------------


 PURPOSE:
	Computes the planetographic sub-point in body coordinates.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	n = glb_sub_point_graphic(gbx, r)


 ARGUMENTS:
  INPUT: 
	gbx:	Array (nt) of any subclass of GLOBE descriptors.

	r:	Array (nv,3,nt) of points in the BODY frame.


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 RETURN: 
	Array (nv,3,nt) points in the BODY frame that lie on the surface
	of each globe, directly 'beneath' r, i.e., such that each 
	planetographic surface normal points at each r.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	





















GLB_TYPE
--------


 PURPOSE:
       Returns the type string for each given globe descriptor.


 CATEGORY:
	NV/LIB/GLB


 CALLING SEQUENCE:
	type = glb_type(gbx)


 ARGUMENTS:
  INPUT:
	gbx:	 Array (nt) of any subclass of GLOBE descriptors.

  OUTPUT: NONE


 KEYWORDS:
  INPUT:  NONE

  OUTPUT: NONE


 RETURN:
       Array (nt) of type strings associated with each given globe 
	descriptor.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	

























GLOBE_DESCRIPTOR__DEFINE
------------------------


 PURPOSE:
	Class structure fo the GLOBE class.


 CATEGORY:
	NV/LIB/CAM


 CALLING SEQUENCE:
	N/A 


 FIELDS:
	bd:	BODY class descriptor.  

		Methods: glb_body, glb_set_body


	type:	String giving the type.  ELLIPSOID, FACET, or HARMONIC.
		Currently only ellipsoids are supported.


		Methods: glb_type, glb_set_type

	lref:	Longitude reference note.  Used to describe the longitude
		reference system.

		Methods: glb_lref, glb_set_lref


	radii:	3-element array giving the ellipsoid radii.

		Methods: glb_radii, glb_set_radii


	lora:	Longitude of first ellipsoid radius.

		Methods: glb_lora, glb_set_lora


	rref:	Reference radius.

		Methods: glb_rref, glb_set_rref


	J:	Array (nj) giving the zonal harmonics.  Indices in the 
		array correspond to the standard harmonic orders, i.e.,
		J[2] is J2.

		Methods: glb_j, glb_set_j


	GM:	Mass x gravitational constant.

		Methods: glb_gm, glb_set_gm


	mass:	Body mass.  This field and GM are kept in sync unless
		/nosync is used in glb_set_mass or glb_set_gm.

		Methods: glb_mass, glb_set_mass


	phase_fn: String giving the name of a phase function to be defined as 
		  follows:

		  function <name>, mu, mu0, parm

		  The function should return a value corresponding to the 
		  phase function with emission cosine mu and incidence 
		  cosine mu0.

		  Methods: glb_phase_fn, glb_set_phase_fn


	phase_parm:	Array (npht) of parameters to pass to the phase
			function.

		  Methods: glb_phase_parm, glb_set_phase_parm


	refl_fn:  String giving the name of a reflection function to be defined as 
		  follows:

		  function <name>, mu, mu0, parm

		  The function should return a value corresponding to the 
		  reflection function with emission cosine mu and incidence 
		  cosine mu0.

		  Methods: glb_refl_fn, glb_set_refl_fn


	refl_parm:	Array (npht) of parameters to pass to the reflection
			function.

		  Methods: glb_refl_parm, glb_set_refl_parm


	albedo:	Bond albedo.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	Spitale, 1/1998
	



















