;===============================================================================
; image_clusters
;
;
;===============================================================================
function image_clusters, image, scale, cutoff=cutoff, mincluster

 if(NOT keyword_set(cutoff)) then cutoff = 0
 if(NOT keyword_set(mincluster)) then mincluster = 1

 ;-----------------------------------------------------------------
 ; get coordinates of all points greater than the cutoff value
 ;-----------------------------------------------------------------
 s = size(image)
 xs = s[1] & ys = s[2]

 w = where(image GT cutoff)
 if(w[0] EQ -1) then return, 0
 nw = n_elements(w)

 xarr = w mod xs
 yarr = w / xs


 ;-----------------------------------------------------------------
 ; bin coordinates according to scale
 ;-----------------------------------------------------------------
 hh = hist__2d(xarr, yarr, rev=ri, bin1=scale, bin2=scale, $
                     min1=0, min2=0, max1=s[1], max2=s[2]) 
 www = where(hh GE mincluster)


 ;-----------------------------------------------------------------
 ; select average position of each cluster
 ;-----------------------------------------------------------------
 if(www[0] NE -1) then $
  begin
   nwww = n_elements(www)
   p = dblarr(2,nwww)
   for i=0, nwww-2 do $
    begin
     ii = ri[ ri[www[i]] : ri[ www[i]+1 ]-1 ]
     nii = double(n_elements(ii))
     x = total(xarr[ii])/nii
     y = total(yarr[ii])/nii
     p[*,i] = [x,y]
    end
  end


 ;-----------------------------------------------------------------
 ; there may still be some duplicates where clusters spanned more
 ; than one bin
 ;-----------------------------------------------------------------
 p = combine_duplicate_points(p, epsilon=scale/2)

 
 return, p
end
;===============================================================================
