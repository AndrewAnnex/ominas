;==============================================================================
; glb_sub_point_graphic
;
;  Returns point on each body (in body coords) where surface normal points
;  toward each given position v (in body coords)
;
;==============================================================================
function glb_sub_point_graphic, gbxp, v
@nv_lib.include
 gbdp = class_extract(gbxp, 'GLOBE')
 nv_notify, gbdp, type = 1
 gbd = nv_dereference(gbdp)

 epsilon = 1d-8

 result = glb_sub_point(gbdp, v)				; 1st guess

 ;------------------------------------------------
 ; iterate to find point where normal points at v
 ;------------------------------------------------
 done = 0
 while(NOT done) do $
  begin
   vv = v_unit(v - result)
   normal = glb_get_surface_normal_body(gbdp, result)

   theta = v_angle(vv, normal)

   w = where(theta GT epsilon)
   if(w[0] EQ -1) then done = 1 $
   else $
    begin
     axis = v_unit(v_cross(normal, vv))
     result = v_rotate_11(result, axis, sin(theta), cos(theta))
     result = glb_sub_point(gbdp, result)
    end

  end


 return, result
end
;==============================================================================
