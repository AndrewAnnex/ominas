;==============================================================================
; orb_compute_elements
;
;==============================================================================
pro orb_compute_elements, rd, gbx, $
	sma=sma, $		; Semimajor axis
	ecc=ecc, $		; Eccentricity
	inc=inc, $		; Inclination
	ap=ap, $		; Argument of periapse
	lan=lan, $		; Lon. ascending node
	dmldt=dmldt, $		; Sidereal mean motion
	dmadt=dmadt, $		; Kepler mean motion
	dapdt=dapdt, $
	liba_ap=liba_ap, $
	libp_ap=libp_ap, $
	libt_ap=libt_ap, $
	dlandt=dlandt, $
	liba_lan=liba_lan, $
	libp_lan=libp_lan, $
	libt_lan=libt_lan, $
	ma=ma, $		; Mean anomaly
	ml=ml, $
	lp=lp, $
	ta=ta, $
	tl=tl, $
	rad=rad, $
        dlpdt=dlpdt, $
	time=t, $			; Epoch at which returned elements apply
	rdt=rdt, $
	gbxt=gbxt

; need to free rdt, gbxt if not returned!!!

 if(NOT defined(t)) then t = bod_time(gbx)

 ;-----------------------------------------
 ; precess to epoch
 ;-----------------------------------------
 gbxt = glb_evolve(gbx, t - bod_time(gbx))
 rdt = orb_evolve(rd, t - bod_time(rd))

 ;-----------------------------------------
 ; compute precessing elements
 ;-----------------------------------------
 bd = class_extract(gbxt, 'BODY')

 sma = orb_get_sma(rdt)
 ecc = orb_get_ecc(rdt)
 inc = orb_get_inc(rdt, bd)
 ap = orb_get_ap(rdt, bd)
 lan = orb_get_lan(rdt, bd)
 ma = orb_get_ma(rdt)
 dapdt = orb_get_dapdt(rdt, bd)
 liba_ap = orb_get_liba_ap(rdt, bd)
 libp_ap = orb_get_libp_ap(rdt, bd)
 libt_ap = orb_get_libt_ap(rdt, bd)
 dlandt = orb_get_dlandt(rdt, bd)
 liba_lan = orb_get_liba_lan(rdt, bd)
 libp_lan = orb_get_libp_lan(rdt, bd)
 libt_lan = orb_get_libt_lan(rdt, bd)
 dmadt = orb_get_dmadt(rdt)

 lp = orb_arg_to_lon(rdt, ap, bd)
 ml = orb_anom_to_lon(rdt, ma, bd)
 dlpdt = dapdt + dlandt
 dmldt = dapdt + dlandt + dmadt

 ta = orb_compute_ta(rdt)
 tl = reduce_angle(orb_anom_to_lon(rdt, ta, bd)) ; there may be a problem with this.

 rad = orb_compute_r(rdt)

end
;==============================================================================
