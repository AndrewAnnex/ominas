;===========================================================================
; get_image_border_pts
;
;===========================================================================
function _get_image_border_pts, cd

; cam_size = cam_size(cd)
 cam_size = image_size(cd)
 nx = cam_size[0] & ny = cam_size[1]

 xx = dindgen(nx)
 yy = dindgen(ny)
 np = 2*(nx+ny)
 border_pts_im = dblarr(2, np) 
 border_pts_im[0,*] = [xx, make_array(nx, val=nx-1), xx, dblarr(nx)]
 border_pts_im[1,*] = [dblarr(ny), yy, make_array(ny, val=ny-1), yy]

 return, border_pts_im
end
;===========================================================================



;===========================================================================
; get_image_border_pts
;
;===========================================================================
function get_image_border_pts, cd, corners=corners, center=center, crop=crop

 if(NOT keyword_set(crop)) then crop = 0
 if(NOT keyword_set(center)) then center = cam_oaxis(cd)

 cam_size = double(cam_size(cd))
 nx = cam_size[0] & ny = double(cam_size[1])
 
 if(NOT keyword_set(corners)) then $
   corners = tr([tr([0d,0]), tr([nx-1,0]), tr([nx-1,ny-1]), tr([0,ny-1])]) + 0.5

 corners = double(corners) + (center - cam_oaxis(cd))#make_array(4, val=1d)

 xmin = min(corners[0,*]) + crop
 ymin = min(corners[1,*]) + crop
 xmax = max(corners[0,*]) - crop
 ymax = max(corners[1,*]) - crop

 dx = (xmax - xmin)/nx
 dy = (ymax - ymin)/ny

 xx = dindgen(nx)*dx + xmin
 yy = dindgen(ny)*dy + ymin
 np = 2*(nx+ny)
 border_pts_im = dblarr(2, np) 
 border_pts_im[0,*] = [xx, make_array(nx, val=xmax), xx, make_array(nx, val=xmin)]
 border_pts_im[1,*] = [make_array(ny, val=ymin), yy, make_array(ny, val=ymax), yy]

 return, border_pts_im
end
;===========================================================================
