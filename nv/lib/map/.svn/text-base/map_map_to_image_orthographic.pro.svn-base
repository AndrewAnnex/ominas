;===========================================================================
; map_good_points_orthographic
;
;
;===========================================================================
function map_good_points_orthographic, md, map_pts

 nt = n_elements(md)
 sv = size(map_pts)
 nv = 1
 if(sv[0] GT 1) then nv = sv[2]
 
 lat = md.center[0,*] & lon = md.center[1,*]			; 1 x nt
 n = dblarr(1,3,nt)
 n[0,0,*] = cos(lat)*cos(lon)					; 1 x 3 x nt
 n[0,1,*] = cos(lat)*sin(lon)
 n[0,2,*] = sin(lat)
 n = n[linegen3x(nv,3,nt)]					; nv x 3 x nt

 lats = map_pts[0,*,*] & lons = map_pts[1,*,*]			; 1 x nv x nt
 v = dblarr(nv,3,nt)
 v[*,0,*] = cos(lats)*cos(lons)					; nv x 3 x nt
 v[*,1,*] = cos(lats)*sin(lons)
 v[*,2,*] = sin(lats)

 dot = v_inner(n, v)

 sub = where(dot GT 0)
 return, sub
end
;===========================================================================



;===========================================================================
; map_map_to_image_orthographic
;
; Forward orthographic projection for the sphere.  See [1], p.149.
;
; References:
;	[1] Snyder (1987)
;	    Map projections -- A working manual
;	    USGS professional paper 1395
;
;===========================================================================
function map_map_to_image_orthographic, mdp, map_pts, valid=valid
 md = nv_dereference(mdp)

 nt = n_elements(md)
 sv = size(map_pts)
 nv = 1
 if(sv[0] GT 1) then nv = sv[2]

 result = dblarr(2,nv,nt, /nozero)

 R = 0.5*min(md.size)*md.scale

 lat = map_pts[0,*,*] / md.units[0]
 lon = map_pts[1,*,*] / md.units[1]

 result[0,*,*] = R*cos(lat)*sin(lon-md.center[1]) + md.origin[0]

 result[1,*,*] = R*(cos(md.center[0])*sin(lat) - $
          sin(md.center[0])*cos(lat)*cos(lon-md.center[1])) + md.origin[1]

 valid = map_good_points_orthographic(md, map_pts)

 return, result
end
;===========================================================================



