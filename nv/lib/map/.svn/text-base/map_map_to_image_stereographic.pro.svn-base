;===========================================================================
; map_map_to_image_stereographic
;
; Forward stereographic projection for the oblate spheroid.  See [1], p.160.
;
; References:
;	[1] Snyder (1987)
;	    Map projections -- A working manual
;	    USGS professional paper 1395
;
;===========================================================================
function map_map_to_image_stereographic, mdp, map_pts, valid=valid
@nv_lib.include
 md = nv_dereference(mdp)

 ecc = (map_radii_to_ecc(md.radii))[0]

 nt = n_elements(md)
 sv = size(map_pts)
 nv = 1
 if(sv[0] GT 1) then nv = sv[2]

 result = dblarr(2,nv,nt, /nozero)

 lat = map_pts[0,*,*] / md.units[0]
 lon = map_pts[1,*,*] / md.units[1]

 a = 0.25*min(md.size)*md.scale 

 m = cos(lat)/sqrt(1d - ecc^2*sin(lat)^2)
 m1 = cos(md.center[0])/sqrt(1d - ecc^2*sin(md.center[0])^2)
 X = 2d*atan(tan(!dpi/4d + lat/2d) * $
               ((1d - ecc*sin(lat))/(1d + $
                      ecc*sin(lat)))^(ecc/2d)) - !dpi/2d
 X1 = 2d*atan(tan(!dpi/4d + md.center[0]/2d) * $
               ((1d - ecc*sin(md.center[0]))/(1d + $
                      ecc*sin(md.center[0])))^(ecc/2d)) - !dpi/2d
 A = 2d*a*md.scale*m1 / $
         (cos(X1)*(1d + sin(X1)*sin(X) + $
             cos(X1)*cos(X)*cos(lon-md.center[1])))

 result[0,*,*] = A*cos(X)*sin(lon-md.center[1]) + md.origin[0]

 result[1,*,*] = A*(cos(X1)*sin(X) - $
        sin(X1)*cos(X)*cos(lon-md.center[1])) + md.origin[1]

 valid = lindgen(nv*nt)
 return, result
end
;===========================================================================



