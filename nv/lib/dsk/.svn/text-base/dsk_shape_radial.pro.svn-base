;===========================================================================
; dsk_shape_radial.pro
;
;
;===========================================================================
function dsk_shape_radial, dkx=dkx, frame_bd=frame_bd, $
	a, e, lp, $		; nt x nlon
	dlon, $			; nlon
	m, em, lpm, $		; nt x nlon x nm
	mm=mm, mii=mii

 if(keyword_set(dkx)) then $
  begin						; keyword__set intentional here
   if(NOT keyword__set(a)) then a = (dsk_sma(dkx))[0]
   if(NOT keyword__set(e)) then e = (dsk_ecc(dkx))[0]
   if(NOT keyword__set(lp)) then $
       lp = orb_arg_to_lon(dkx, dsk_get_ap(dkx, frame_bd), frame_bd)
   if(NOT keyword__set(m)) then m = (dsk_m(dkx))[*,0]
   if(NOT keyword__set(em)) then em = (dsk_em(dkx))[*,0]
   if(NOT keyword__set(lpm)) then lpm = (dsk_lpm(dkx))[*,0]
  end

 r01 = a*(1d - e^2)/(1d + e*cos(dlon-lp))
 if(NOT keyword_set(m)) then return, r01
 if(m[0] EQ 0) then return, r01

 nlon = n_elements(dlon)
 nt = n_elements(a)/nlon
 nm = n_elements(m) / nt / nlon

 sub = linegen3z(nt,nlon,nm)
 ddlon = (dlon##make_array(nt,val=1d))[sub]
 aa = a[sub]

; dlpm = 
dlpm = 0d

 rm = -aa*em*cos(m*(ddlon - (lpm+dlpm)))

 if(defined(mii)) then return, rm[*,*,mii]		; nt x nlon

 if(keyword_set(mm)) then $
  begin
   ii = where(m[0,0,*] EQ mm)
   return, rm[*,*,ii]                                   ; nt x nlon
  end

 if(nm EQ 1) then return, r01 + rm
 return, r01 + total(rm, 3)				; nt x nlon
end
;===========================================================================
