;===========================================================================
; dsk_get_edge_radius.pro
;
;
;===========================================================================
function dsk_get_edge_radius, dkxp, dlon, frame_bd, inner=inner, outer=outer, $
    one_to_one=one_to_one
@nv_lib.include
 dkdp = class_extract(dkxp, 'DISK')
 nv_notify, dkdp, type = 1
 dkd = nv_dereference(dkdp)

 if(keyword__set(inner)) then ii = 0 $
 else if(keyword__set(outer)) then ii = 1

 nlon = n_elements(dlon)
 nt = n_elements(dkd)

 if(NOT keyword__set(one_to_one)) then $
  begin
   MM = make_array(nlon,val=1)

   a = [reform([dkd.sma[0,ii,*]])]#MM				; nt x nlon
   e = [reform([dkd.ecc[0,ii,*]])]#MM				; nt x nlon
   lp = orb_arg_to_lon(dkdp, dsk_get_ap(dkdp, frame_bd), frame_bd)#MM

   nm = dsk_get_nm()
   sub = linegen3y(nt,nlon,nm)

   m = (transpose(dkd.m[*,ii,*]))[sub]			; nt x nlon x nm
   em = (transpose(dkd.em[*,ii,*]))[sub]		; nt x nlon x nm
   lpm = (transpose(dkd.lpm[*,ii,*]))[sub]		; nt x nlon x nm
  end $
 else $
  begin
   a = tr(reform([dkd.sma[0,ii,*]]))				; 1 x nlon
   e = tr(reform([dkd.ecc[0,ii,*]]))				; 1 x nlon
   lp = tr(orb_arg_to_lon(dkdp, dsk_get_ap(dkdp, frame_bd), frame_bd))

   nm = dsk_get_nm()
   m = reform(transpose(dkd.m[*,ii,*]), 1,nlon,nm, /over)	; 1 x nlon x nm
   em = reform(transpose(dkd.em[*,ii,*]), 1,nlon,nm, /over)	; 1 x nlon x nm
   lpm = reform(transpose(dkd.lpm[*,ii,*]), 1,nlon,nm, /over)	; nt x nlon x nm
  end


 return, dsk_shape_radial(a, e, lp, dlon, m, em, lpm)
end
;===========================================================================
