;===========================================================================
; disk_descriptor__define
;
;
;===========================================================================
pro disk_descriptor__define

 ndv = bod_ndv()
 nm = dsk_get_nm()
 nl = dsk_get_nl()

 struct = $
    { disk_descriptor, $
	bd:		 ptr_new(), $		; ptr to body descriptor
	class:		 '', $			; Name of descriptor class

	sma:		 dblarr(ndv+1,2), $	; semimajor axes and derivatives
						;  Negative sma means no edge
	ecc:		 dblarr(ndv+1,2), $	; eccentricities and derivatives
						; 0=inner edge, 1=outer edge
						
	scale:		dblarr(2), $		; Radial scale coefficients:
						;  scaled_radii = 
						;    scale[0] * radii*scale[1]

	;--------------------- m > 1 radial harmonics ----------------------

	nm:		 intarr(2), $		; Number of m > 1  harmonics
	m:		 intarr(nm,2), $	; m values
	em:		 dblarr(nm,2), $	; ecc for each m > 1
	lpm:		 dblarr(nm,2), $	; lp for each m > 1
	dlpmdt:		 dblarr(nm,2), $	; dlpdt for each m > 1
						; 0=inner edge, 1=outer edge	
;	libfm:		 dblarr(nm,2), $	; Libration freq. for each m > 1
;	libtm:		 dblarr(nm,2), $	; Libration epoch for each m > 1

	;--------------------- l > 0 vertical harmonics ----------------------
        ; In resonance theory, m is typically used in discussions of both
        ; radial and vertical distortions.  However, that doesn't allow
        ; me to superpose both types of distortions on the same ring, so
        ; I've used l as the index for vertical distortions.
	;
	; We allow l=1 modes here so that one can specify inner and
	; outer planar edges with different inclinations.

	nl:		 intarr(2), $		; Number of l > 1  harmonics
	l:		 intarr(nl,2), $	; l values
	il:		 dblarr(nl,2), $	; inc for each l > 1
	lanl:		 dblarr(nl,2), $	; lan for each l > 1
	dlanldt:	 dblarr(nl,2) $		; dlandt for each l > 1
						; 0=inner edge, 1=outer edge	
    }

end
;===========================================================================



