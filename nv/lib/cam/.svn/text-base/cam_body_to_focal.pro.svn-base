;===========================================================================
; cam_body_to_focal
;
; v is array (nv,3,nt) of column vectors.  result is array (2,nv,nt)
; of points
;
;===========================================================================
function cam_body_to_focal, cxp, v
@nv_lib.include
 cdp = class_extract(cxp, 'CAMERA')
 cd = nv_dereference(cdp)

 sv = size(v)
 nv = sv[1]
 nt = n_elements(cd)

 vv = v_mag(v)

 rho = acos(v[*,1,*]/vv)				; angles from optic axis

 hyp = sqrt( v[*,2,*]^2 + v[*,0,*]^2 )
 p = rho * v[*,0,*]/hyp					; rho*cos(theta)
 q = rho * v[*,2,*]/hyp					; rho*sin(theta)

 w=where(hyp EQ 0)
 if(w[0] NE -1) then p[w]=(q[w]=0.0)

 if((size(p))[0] EQ 3) then $
  begin
   result = dblarr(2,nv,nt, /nozero)
   result[0,*,*] = transpose(p, [1,0,2])
   result[1,*,*] = transpose(q, [1,0,2])
   return, result
  end $
 else return, [transpose(p), transpose(q)]
end
;===========================================================================



