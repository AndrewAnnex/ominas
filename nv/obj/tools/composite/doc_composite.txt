									12/05/15
COMPOSITE Program Reference
===========================

 Summary
 -------
  - BODY_SIZE
	Returns the sizes of the given bodies.

  - BODY_TO_IMAGE_POS
       Transforms vectors in body coordinates to image coordinates

  - BODY_TO_SURFACE
       Transforms points in body coordinates to sirface coordinates.

  - DISK_TO_IMAGE
       Transforms points in disk coordinates to image coordinates

  - DISK_TO_INERTIAL_POS
       Transforms position vectors in disk coordinates to inertial 
	coordinates.

  - DISK_TO_MAP
       Transforms points in disk coordinates to map coordinates.

  - DLON_TO_DAZ
	Computes azimuths relative to a given observer descriptor.

  - GET_SURFACE_RANGES
	Determines full ranges of valid surface coordinate system.

  - GLOBE_TO_IMAGE
       Transforms points in body globe coordinates to image coordinates.

  - GLOBE_TO_MAP
       Transforms points in globe coordinates to map coordinates.

  - IMAGE_ORIGIN
	Returns the origin of a map or camera image.

  - IMAGE_SIZE
	Returns the size of a map or camera image.

  - IMAGE_TO_BODY
       Transforms points in image coordinates to body coordinates on the
	object.

  - IMAGE_TO_DISK
       Transforms points in image coordinates to disk coordinates

  - IMAGE_TO_GLOBE
       Transforms points in image coordinates to body globe coordinates

  - IMAGE_TO_INERTIAL
       Transforms points in image coordinates to unit vectors with 
	inertial coordinates.

  - IMAGE_TO_MAP
       Transforms points in image coordinates to map coordinates.

  - IMAGE_TO_ORBIT
	Computes orbital elements corresponding to image points, assuming
	a circular orbit.

  - IMAGE_TO_RADEC
       Transforms points in image coordinates to polar ra/dec coords
	w.r.t the inertial frame.

  - IMAGE_TO_SURFACE
       Transforms points in image coordinates to surface coordinates.

  - INERTIAL_TO_DISK
       Transforms vectors in inertial coordinates to disk coordinates.

  - INERTIAL_TO_DISK_POS
       Transforms position vectors in inertial coordinates to disk 
	coordinates.

  - INERTIAL_TO_GLOBE
       Transforms vectors in inertial coordinates to globe coordinates.

  - INERTIAL_TO_GLOBE_POS
       Transforms position vectors in inertial coordinates to globe 
	coordinates.

  - INERTIAL_TO_IMAGE
       Transforms vectors in inertial coordinates to image coordinates

  - INERTIAL_TO_IMAGE_POS
       Transforms vectors in inertial coordinates to image coordinates

  - MAP_TO_DISK
       Transforms points in map coordinates to disk coordinates.

  - MAP_TO_GLOBE
       Transforms points in map coordinates to surface coordinates.

  - MAP_TO_IMAGE
       Transforms points from map coordinates to image coordinates.

  - MAP_TO_SURFACE
       Transforms points in map coordinates to surface coordinates.

  - RADEC_TO_IMAGE
       Transforms points in polar ra/dec coords w.r.t the inertial frame
	to image coords.

  - SET_IMAGE_ORIGIN
	Sets the origin of a map or camera image.

  - SET_IMAGE_SIZE
	Sets the size of a map or camera image.

  - SURFACE_IMAGE_BOUNDS
	Computes latitude / longitude ranges visible in an image.

  - SURFACE_TO_BODY
       Transforms points in any surface coordinate system to body
	coordinates.

  - SURFACE_TO_IMAGE
       Transforms points in any surface coordinate system to image
	coordinates.

  - SURFACE_TO_MAP
       Transforms points in any surface coordinate system to map
	coordinates.





BODY_SIZE
---------


 PURPOSE:
	Returns the sizes of the given bodies.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       body_size(bx)


 ARGUMENTS:
  INPUT:
	bx:      Globe or Disk descriptor; nt.


  OUTPUT: NONE


 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN: 
	nt-element array giving the size of each body.


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale


























BODY_TO_IMAGE_POS
-----------------


 PURPOSE:
       Transforms vectors in body coordinates to image coordinates


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = body_to_image_pos(cd, bx, v, inertial=inertial)


 ARGUMENTS:
  INPUT:
             cd:       Array of nt camera or map descriptors.

             bx:       Array of nt object descriptors, subclass of BODY.

              v:       Array (nv x 3 x nt) of position vectors.

  OUTPUT:
	NONE

 KEYWORDS:
  INPUT:
	NONE

  OUTPUT:
       inertial:       Array (nv x 3 x nt) of Vectors in inertial coordinates.

	valid:	Indices of valid output points.


 RETURN:
       An array (2 x nv x nt) of points in image coordinates.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale




















BODY_TO_SURFACE
---------------


 PURPOSE:
       Transforms points in body coordinates to sirface coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = body_to_surface(bx, body_pts)


 ARGUMENTS:
  INPUT:
	bx:      Array of nt object descriptors (subclass of BODY).

	body_pts:       Array (nv x 3 x nt) of body points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: 
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of surface coordinates.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale























DISK_TO_IMAGE
-------------


 PURPOSE:
       Transforms points in disk coordinates to image coordinates


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = disk_to_image(cd, dkx, p)


 ARGUMENTS:
  INPUT:
	cd:       Array of nt camera or map descriptors.

	dkx:      Array of nt object descriptors (subclass of DISK).

	p:       Array (nv x 3 x nt) of image points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT:
	sund:	If given, longitudes are assumed to be referenced to the 
		sun direction.

	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT:
	valid:	Indices of valid output points.

	body_pts:	Body coordinates of output points.


 RETURN:
       Array (nv x 3 x nt) of image coordinates.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale, 9/2002















DISK_TO_INERTIAL_POS
--------------------


 PURPOSE:
       Transforms position vectors in disk coordinates to inertial 
	coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = disk_to_inertial_pos(dkx, v, frame_bd=frame_bd)


 ARGUMENTS:
  INPUT:
	dkx:	Array of nt descriptors, subclass of DISK.

	v:	Array (nv x 3 x nt) of disk points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT:
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of inertial points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale






















DISK_TO_MAP
-----------


 PURPOSE:
       Transforms points in disk coordinates to map coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = disk_to_map(md, dkx, disk_pts)


 ARGUMENTS:
  INPUT:
	md:      Array of nt map descriptors.

	dkx:     Array of nt disk descriptors.

	disk_pts:       Array (nv x 3 x nt) of disk points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (2 x nv x nt) of map coordinates.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale
























DLON_TO_DAZ
-----------


 PURPOSE:
	Computes azimuths relative to a given observer descriptor.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = dlon_to_daz(dlon, dkx, od)


 ARGUMENTS:
  INPUT:
	dlon:	Longitude.

	dkx:	Disk descriptor.

	od:	Object descriptor (subclass of BODY) describing the observer.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       An array of azimuths.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale
























GET_SURFACE_RANGES
------------------


 PURPOSE:
	Determines full ranges of valid surface coordinate system.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       points = get_surface_ranges(cd, bx)


 ARGUMENTS:
  INPUT:
	cd:      Camera or map descriptor

	bx:      Object descriptor (subclass of BODY)


  OUTPUT: NONE


 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN: 
	Array of 2 points representng the minimum and maximum values of the 
	relevant coordinate system.


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale























GLOBE_TO_IMAGE
--------------


 PURPOSE:
       Transforms points in body globe coordinates to image coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = globe_to_image(cd, gbd, p)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt Camera or map descriptor

	gbx:	Array of nt Object descriptor (of type GLOBE)

	p:	Array (nv x 3 x nt) of globe points

  OUTPUT:
	body_pts:	Body coordinates of output points.


 RETURN:
       Array (2 x nv x nt) of image points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale;





























GLOBE_TO_MAP
------------


 PURPOSE:
       Transforms points in globe coordinates to map coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = globe_to_map(md, gbx, globe_pts)


 ARGUMENTS:
  INPUT:
	md:	Array of nt map descriptor.

	gbx:	Array of nt globe descriptor.

	globe_pts:	Array (nv x 3 x nt) of globe points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (2 x nv x nt) of map coordinates.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale
























IMAGE_ORIGIN
------------


 PURPOSE:
	Returns the origin of a map or camera image.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       image_origin(xd)


 ARGUMENTS:
  INPUT:
	xd:      Camera or map descriptor


  OUTPUT: NONE


 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN: 
	2-element array giving the origin in the x and y directions.


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale


























IMAGE_SIZE
----------


 PURPOSE:
	Returns the size of a map or camera image.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       image_size(xd)


 ARGUMENTS:
  INPUT:
	xd:      Camera or map descriptor


  OUTPUT: NONE


 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN: 
	2-element array giving the size in the x and y directions.


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale


























IMAGE_TO_BODY
-------------


 PURPOSE:
       Transforms points in image coordinates to body coordinates on the
	object.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = image_to_body(cd, bx, p)


 ARGUMENTS:
  INPUT:
	cd:       Array of nt camera or map descriptor.

	bx:       Array of nt body descriptor (subclass of GLOBE or DISK).

	p:       Array (2 x nv x nt) of image points.

  OUTPUT:
       hit:	Array with one element per input point.  1 if point
		falls on the body, 0 if not.

 RETURN:
       Array (nv x 3 x nt) of body-frame vectors.  Zero vectors are returned if a
	body point cannot be computed (e.g., the ray misses the planet).

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale; 8/2006



























IMAGE_TO_DISK
-------------


 PURPOSE:
       Transforms points in image coordinates to disk coordinates


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = image_to_disk(cd, dkx, p)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt camera or map descriptors.

	dkx:	Array of nt object descriptors (subclass of DISK).

	p:	Array (2 x nv x nt) of image points.

  OUTPUT:
       hit:	Array with one element per input point.  1 if point
		falls on the body, 0 if not.


 KEYWORDS:
   INPUT:
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT:
	valid:	Indices of valid output points.

       hit:	Array with one element per input point.  1 if point
		falls on the body, 0 if not.

	body_pts:	Body coordinates of output points.


 RETURN:
       Array (nv x 3 x nt) of disk positions.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Tiscareno (modified from image_to_surface)













IMAGE_TO_GLOBE
--------------


 PURPOSE:
       Transforms points in image coordinates to body globe coordinates


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = image_to_globe(cd, od, p)


 ARGUMENTS:
  INPUT:
	cd:       Array of nt camera or map descriptors.

	od:       Array of nt object descriptors (of type GLOBE).

	p:       Array (2 x nv x nt) of image points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT:
	valid:	Indices of valid output points.

	body_pts:	Body coordinates of output points.

	discriminant:	Determinant D from the ray trace.  No solutions for
			D<0, two solutions for D=0, one slution for D>0.


 RETURN:
       Array (nv x 3 x nt) of globe positions.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale;


















IMAGE_TO_INERTIAL
-----------------


 PURPOSE:
       Transforms points in image coordinates to unit vectors with 
	inertial coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = image_to_inertial(cd, p)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt camera descriptors.

	p:	Array (2 x nv x nt) of image points.

  OUTPUT:
       NONE

 RETURN:
       Array (nv x 3 x nt) of of inertial unit vectors.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale 4/2003































IMAGE_TO_MAP
------------


 PURPOSE:
       Transforms points in image coordinates to map coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = image_to_map(cd, gbd, p)


 ARGUMENTS:
  INPUT:
	md:	Array of nt map or camera descriptors.

	gbx:	Array of nt object descriptors (of type GLOBE).

	p:	Array (2 x nv x nt) of image points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT:
	bx:	If md is not a map descriptor, bx gives a subclass of BODY
		needed for transforming surface to map coordinates.

	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT:
	valid:	Indices of valid output points.

	body_pts:	Body coordinates of output points.


 RETURN:
       Array (nv x 3 x nt) of map points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale;















IMAGE_TO_ORBIT
--------------


 PURPOSE:
	Computes orbital elements corresponding to image points, assuming
	a circular orbit.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       dkd = image_to_orbit(cd, gbx, dkx, image_pts)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt camera or map descriptors.

	gbx:	Array of nt globe descriptor describing the primary body.

	dkx:	Array of nt disk descriptor describing the assumed orbit plane.

	image_pts:	Array (1,3,nt) of image points.


  OUTPUT: NONE


 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN: 
	Array of nt disk descriptors reresenting the computed orbits.


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale



















IMAGE_TO_RADEC
--------------


 PURPOSE:
       Transforms points in image coordinates to polar ra/dec coords
	w.r.t the inertial frame.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = image_to_radec(cd, p)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt camera descriptors.

	p:	Array (2 x nv x nt) of image points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT:
	body_pts:	Body coordinates of output points.


 RETURN:
       Array (nv x 3 x nt) of radec vectors in the cd BODY frame.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale 3/2002, to replace image_to_ra_dec
























IMAGE_TO_SURFACE
----------------


 PURPOSE:
       Transforms points in image coordinates to surface coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = image_to_surface(cd, bx, surface_pts)


 ARGUMENTS:
  INPUT:
	cd:      Array of nt camera or map descriptor

	bx:      Array of nt object descriptors (subclass of BODY).

	surface_pts:       Array (2 x nv x nt) of surface points.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: 
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.


   OUTPUT: 
	valid:	Indices of valid output points.

       hit:	Array with one element per input point.  1 if point
		falls on the body, 0 if not.

	body_pts:	Body coordinates of output points.

	discriminant:	Determinant D from the ray trace.  No solutions for
			 D<0, two solutions for D=0, one slution for D>0.


 RETURN:
       Array (nv x 3 x nt) of surface points.  In the case of a camera descriptor, ray
	tracing is used.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale










INERTIAL_TO_DISK
----------------


 PURPOSE:
       Transforms vectors in inertial coordinates to disk coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = inertial_to_image(dkx, v)


 ARGUMENTS:
  INPUT:
	dkx:	Array of nt descriptors, subclass of DISK.

	v:	Array (nv x 3 x nt) of inertial vectors.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT:
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of disk points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale, 2/2004























INERTIAL_TO_DISK_POS
--------------------


 PURPOSE:
       Transforms position vectors in inertial coordinates to disk 
	coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = inertial_to_disk_pos(dkx, v, frame_bd=frame_bd)


 ARGUMENTS:
  INPUT:
	dkx:	Array of nt descritors, subclass of DISK.

	v:	Array (nv x 3 x nt) of inertial vectors

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT:
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of disk points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale, 3/2004






















INERTIAL_TO_GLOBE
-----------------


 PURPOSE:
       Transforms vectors in inertial coordinates to globe coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = inertial_to_image(gbx, v)


 ARGUMENTS:
  INPUT:
	gbx:	Array of nt descriptors, subclass of globe.

	v:	Array (nv x 3 x nt) of inertial vectors.

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of globe points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale, 9/2012


























INERTIAL_TO_GLOBE_POS
---------------------


 PURPOSE:
       Transforms position vectors in inertial coordinates to globe 
	coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = inertial_to_globe_pos(gbx, v, frame_bd=frame_bd)


 ARGUMENTS:
  INPUT:
	gbx:	Array of nt descritors, subclass of globe.

	v:	Array (nv x 3 x nt) of inertial vectors

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of globe points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale, 9/2012

























INERTIAL_TO_IMAGE
-----------------


 PURPOSE:
       Transforms vectors in inertial coordinates to image coordinates


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = inertial_to_image(cd, v)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt camera descriptors.

	v:	Array (nv x 3 x nt) of inertial vectors

  OUTPUT:
       NONE

 RETURN:
       Array (2 x nv x nt) of image points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale
































INERTIAL_TO_IMAGE_POS
---------------------


 PURPOSE:
       Transforms vectors in inertial coordinates to image coordinates


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = inertial_to_image_pos(cd, v)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt camera descriptors.

	v:	Array (nv x 3 x nt) of inertial vectors

  OUTPUT:
       NONE

 RETURN:
       Array (2 x nv x nt) of image points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale
































MAP_TO_DISK
-----------


 PURPOSE:
       Transforms points in map coordinates to disk coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = map_to_disk(md, dkx, map_pts)


 ARGUMENTS:
  INPUT:
	md:	Array of nt map descriptors.

	dkx:	Array of nt disk descriptors.

	map_pts:       Array (2 x nv x nt) of map points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of disk coordinates, with the altitude coordinate set to
	zero.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale























MAP_TO_GLOBE
------------


 PURPOSE:
       Transforms points in map coordinates to surface coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = map_to_globe(md, gbx, map_pts)


 ARGUMENTS:
  INPUT:
	md:	Array of nt map descriptors.

	gbx:	Array of nt globe descriptors.

	map_pts:	Array (2 x nv x nt) of map points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of globe coordinates, with the altitude coordinate set to
	zero.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale























MAP_TO_IMAGE
------------


 PURPOSE:
       Transforms points from map coordinates to image coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:

       result = map_to_image(md, cd, bx, map_pts)


 ARGUMENTS:
  INPUT:
	md:	Array of nt map descriptors describing the initial coordinate system.
		If bx is given, then this descriptor is not needed, though
		it may still be used to select between graphic/centric 
		latitudes.

	cd:	Array of nt camera or map descriptor describing the final 
		coordinate system.

	bx:	Array of nt Object descriptors (subclass of BODY).

	map_pts:       Array (2 x nv x nt) of map points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: 
	valid:	Indices of valid output points.

	body_pts:	Body coordinates of output points.

	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.


   OUTPUT: NONE


 RETURN:
       Array (2 x nv x nt) of image points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale









MAP_TO_SURFACE
--------------


 PURPOSE:
       Transforms points in map coordinates to surface coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = map_to_surface(md, bx, map_pts)


 ARGUMENTS:
  INPUT:
	md:	Array of nt map descriptors.

	bx:	Array of nt object descriptors (subclass of BODY.

	map_pts:	Array (2 x nv x nt) of map points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of surface coordinates, with the altitude coordinate 
	set to zero.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale























RADEC_TO_IMAGE
--------------


 PURPOSE:
       Transforms points in polar ra/dec coords w.r.t the inertial frame
	to image coords.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = radec_to_image(cd, p)


 ARGUMENTS:
  INPUT:
	cd:	Array of nt camera descriptors.

	p:	Array (nv x 3 x nt) of radec points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT:
	body_pts:	Body coordinates of output points.


 RETURN:
       Array (2 x nv x nt) of image points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale 3/2002
























SET_IMAGE_ORIGIN
----------------


 PURPOSE:
	Sets the origin of a map or camera image.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       set_image_origin, xd, origin


 ARGUMENTS:
  INPUT:
	xd:      Camera or map descriptor

	origin: origin argument as in map_set_origin


  OUTPUT: NONE


 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN: 
	NONE.


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale
























SET_IMAGE_SIZE
--------------


 PURPOSE:
	Sets the size of a map or camera image.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       set_image_size, xd, size


 ARGUMENTS:
  INPUT:
	xd:      Camera or map descriptor

	size: 	 Size argument as in map_set_size


  OUTPUT: NONE


 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN: 
	NONE.


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale
























SURFACE_IMAGE_BOUNDS
--------------------


 PURPOSE:
	Computes latitude / longitude ranges visible in an image.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       surface_image_bounds, cd, bx, $
	            latmin=latmin, latmax=latmax, lonmin=lonmin, lonmax=lonmax


 ARGUMENTS:
  INPUT:
	cd:      Camera descriptor

	bx:      Object descriptor (subclass of BODY)


  OUTPUT: NONE


 KEYWORDS:
   INPUT:
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

	slop:	Amount, in pixels, by which to expand the image size
		considered in the calcultaion.

   OUTPUT:
	border_pts_im:	Image points on the border of the image defined by cd.

	latmin:	Minimum latitude covered in image

	latmax:	Maximum latitude covered in image

	lonmin:	Minimum longitude covered in image

	lonmax:	Maximum longitude covered in image


 RETURN: NONE


 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale









SURFACE_TO_BODY
---------------


 PURPOSE:
       Transforms points in any surface coordinate system to body
	coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = surface_to_body(bx, surface_pts)


 ARGUMENTS:
  INPUT:
	bx:      Array of nt object descriptors (subclass of BODY).

	surface_pts:       Array (nv x 3 x nt) of surface points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: 
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.

   OUTPUT: NONE


 RETURN:
       Array (nv x 3 x nt) of body coordinates.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale






















SURFACE_TO_IMAGE
----------------


 PURPOSE:
       Transforms points in any surface coordinate system to image
	coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = surface_to_image(cd, bx, surface_pts)


 ARGUMENTS:
  INPUT:
	cd:      Array of nt camera or map descriptors.

	bx:      Array of nt object descriptors (subclass of BODY).

	surface_pts:       Array (nv x 3 x nt) of surface points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: 
	frame_bd:	Subclass of BODY giving the frame against which to 
			measure inclinations and nodes, e.g., a planet 
			descriptor.  One per bx.


   OUTPUT: NONE


 RETURN:
       Array (2 x nv x nt) of image points.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale



















SURFACE_TO_MAP
--------------


 PURPOSE:
       Transforms points in any surface coordinate system to map
	coordinates.


 CATEGORY:
       NV/LIB/TOOLS/COMPOSITE


 CALLING SEQUENCE:
       result = surface_to_map(md, bx, surface_pts)


 ARGUMENTS:
  INPUT:
	md:      Array of nt map descriptors.

	bx:      Array of nt object descriptors (subclass of BODY.

	surface_pts:       Array (nv x 3 x nt) of surface points

  OUTPUT:
       NONE

 KEYWORDS:
   INPUT: NONE

   OUTPUT: NONE


 RETURN:
       Array (2 x nv x nt) of map coordinates.

 STATUS:
       Completed.


 MODIFICATION HISTORY:
       Written by:     Spitale























