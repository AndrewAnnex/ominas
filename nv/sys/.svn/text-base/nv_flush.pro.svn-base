;=============================================================================
;+
; NAME:
;	nv_flush
;
;
; PURPOSE:
;	Flushes the nv event buffer.
;
;
; CATEGORY:
;	NV/SYS
;
;
; CALLING SEQUENCE:
;	nv_flush
;
;
; ARGUMENTS: 
;  INPUT:
;	events:	If specified, these events are reported instead of those in 
;		the event buffer.
;
;
; KEYWORDS: NONE
;
;
; RETURN:
;	NONE
;
;
; PROCEDURE:
;	Events are compressed so that duplicate events are not reported.  Each
;	unique handler is called once with all of the relevant events given.
;
;
; COMMON BLOCKS:
;	nv_notify_block
;
;
; STATUS:
;	Complete
;
;
; SEE ALSO:
;	nv_notify
;
;
; MODIFICATION HISTORY:
; 	Written by:	Spitale, 11/2002
;	
;-
;=============================================================================
pro nv_flush, events, clear=clear
@nv_notify_block.common
@nv.include

 if(NOT keyword_set(clear)) then $
  begin
   if(NOT keyword_set(events)) then events = nv_compress_events(buf)
   if(NOT keyword_set(events)) then return

   ;--------------------------------------------------------------------
   ; call each unique handler only once sending all relevant events
   ;--------------------------------------------------------------------
   uu = uniq(events.handler)
   nuu = n_elements(uu)
   for i=0, nuu-1 do $
    begin
     w = where(events.handler EQ events[i].handler)
     call_procedure, events[i].handler, events[w]
    end
  end

 ;----------------------------
 ; clear the event buffer
 ;----------------------------
 buf = 0

end
;=============================================================================
