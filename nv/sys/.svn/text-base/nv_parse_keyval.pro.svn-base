;=============================================================================
;	NOTE:	remove the second '+' on the next line for this header
;		to be recognized by extract_doc.
;++
; NAME:
;	nv_parse_keyval
;
;
; PURPOSE:
;	xx
;
;
; CATEGORY:
;	NV/SYS
;
;
; CALLING SEQUENCE:
;	result = xx(xx, xx)
;	xx, xx, xx
;
;
; ARGUMENTS:
;  INPUT:
;	xx:	xx
;
;	xx:	xx
;
;  OUTPUT:
;	xx:	xx
;
;	xx:	xx
;
;
; KEYWORDS:
;  INPUT:
;	xx:	xx
;
;	xx:	xx
;
;  OUTPUT:
;	xx:	xx
;
;	xx:	xx
;
;
; RETURN:
;	xx
;
;
; COMMON BLOCKS:
;	xx:	xx
;
;	xx:	xx
;
;
; SIDE EFFECTS:
;	xx
;
;
; RESTRICTIONS:
;	xx
;
;
; PROCEDURE:
;	xx
;
;
; EXAMPLE:
;	xx
;
;
; STATUS:
;	xx
;
;
; SEE ALSO:
;	xx, xx, xx
;
;
; MODIFICATION HISTORY:
; 	Written by:	xx, xx/xx/xxxx
;	
;-
;=============================================================================
pro nv_parse_keyval, _keyval, keyword, value
@nv.include

;if((strpos(_keyval, 'PLUTO'))[0] NE -1) then stop
; keyval = strcompress(_keyval, /remove_all)
 keyval = str_compress(_keyval, /remove_all)

 s = str_split(keyval, '=')

 keyword = s[0]

 if(n_elements(s) EQ 2) then value = s[1] $
 else if(strmid(keyword, 0, 1) EQ '/') then $
  begin
   keyword = strmid(keyword, 1, strlen(keyword)-1)
   value = '1'
  end $
 else nv_message, name = 'nv_parse_keyval', $
                                  'Keyword/value parse error: ' + keyval
 

end
;=============================================================================
