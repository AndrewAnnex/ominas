;===========================================================================
; nv_lookup_io.pro
;
;===========================================================================
pro nv_lookup_io, filetype, input_fn, output_fn, silent=silent
@nv_block.common
@nv.include


 ;=====================================================
 ; read the io table if it doesn't exist
 ;=====================================================
 if(NOT keyword_set(*nv_state.io_table_p)) then $
   nv_read_config, 'NV_IO', $
              nv_state.io_table_p, nv_state.io_filenames_p
 table = *nv_state.io_table_p


 ;==============================================================
 ; lookup the filetype string
 ;==============================================================
 input_fn = ''
 output_fn = ''

 filetypes = table[*,0]
 w = (where(filetypes EQ filetype))[0]


 ;==============================================================
 ; extract all given translators for this instrument
 ;==============================================================
 if(w NE -1) then $
  begin
   input_fn = table[w,1]
   output_fn = table[w,2]
  end


end
;===========================================================================
