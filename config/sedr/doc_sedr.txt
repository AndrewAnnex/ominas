									12/05/15
SEDR Program Reference
======================

 Summary
 -------
  - SEDR_BUILDCM
	Build the C-matrix (or ME-matrix) from the euler angles (degrees).

  - SEDR_GET_BCONS
	Returns a bcons record from an IDL bcons file.

  - SEDR_GET_SEDR2
	Returns a sedr2 record from an IDL sedr2 file.

  - SEDR_GET_SEDRUPD
	Returns a sedrupd record from an IDL sedrupd file.

  - SEDR_LIST
	Lists sedr2 and sedrupd records at a given sctime or for a given
	data descriptor and returns the number or sedr records and updates.

  - SEDR_READ
	Reads a sedr2 and sedrupd file at a given sctime.

  - SEDR_TIME
	Find seconds past 1950 from sedr.

  - SEDR_TO_NV
	Converts a C matrix to NV definition.

  - SEDR_UNPACK_BCONS
	Unpacks the body constants record from platform-independent to platform
       format or vis-versa.

  - SEDR_UNPACK_SEDR2
	Unpacks the sedr2 record from platform-independent to platform
       format or vis-versa.

  - SEDR_UNPACK_SEDRUPD
	Unpacks the sedrupd record from platform-independent to platform
       format or vis-versa.

  - SEDR_VGR_CAMERAS
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv camera descriptor

  - SEDR_VGR_INPUT
	Input translator for Voyager images using SEDR database.

  - SEDR_VGR_PLANETS
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv planet descriptor

  - SEDR_VGR_SUN
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv planet descriptor

  - SEDR_VGR_TARGETS
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv planet descriptor

  - VICAR_VGRKEY
	Return keyword values from a Voyager vicar label.


SEDR_BUILDCM
------------


 PURPOSE:
	Build the C-matrix (or ME-matrix) from the euler angles (degrees).


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	result = sedr_buildcm(alpha, delta, kappa)


 ARGUMENTS:
  INPUT:
	alpha:		Right ascension of optic axis (or planet pole) (degrees)

	delta:		Declination of optic axis (or planet pole) (degrees)

	kappa:		Rotation about optic axis (or planet pole) (degrees)

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 PROCEDURE:


 RESTRICTIONS:


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	Haemmerle, 12/1998 ported from a NAV function
			Spitale 1/2002 transposed
	



















SEDR_GET_BCONS
--------------


 PURPOSE:
	Returns a bcons record from an IDL bcons file.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	result = sedr_get_bcons(target_id)


 ARGUMENTS:
  INPUT:
	target_id:	Target id for information to retrieve.  Target
			id is sat_number*10 + planet_number as defined for
			the Voyager project.

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


  ENVIRONMENT VARIABLES:
	NV_SEDR_DATA:	Directory containing the SEDR data files.  The 
			variable should contain a trailing slash.


 RETURN:
	A body constant record.

 PROCEDURE:
	Opens a bcons and its index file, then returns the appropriate
	unpacked bcons record. It requires that the environment
       variable NV_SEDR_DATA be set to the directory containing the
       files.  The variable should contain a trailing slash.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	Haemmerle, 1/1999
	













SEDR_GET_SEDR2
--------------


 PURPOSE:
	Returns a sedr2 record from an IDL sedr2 file.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	result = sedr_get_sedr2(sctime ,planet)


 ARGUMENTS:
  INPUT:

	sctime:		Spacecraft time (FDS count x 100)

       planet:         Planet, if given, one of 'jupiter', 'saturn',
                       'uranus' or 'neptune'. 


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


  ENVIRONMENT VARIABLES:
	NV_SEDR_DATA:	Directory containing the SEDR data files.  The 
			variable should contain a trailing slash.


 RETURN:
	An unpacked sedr2 record.


 PROCEDURE:
	Opens a sedr2 and its index file, then returns the appropriate
	unpacked sedr2 record.  It requires that the environment
	variable NV_SEDR_DATA be set to the directory containing the
       files.  The variable should contain a trailing slash.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	Haemmerle, 1/1999
                       using some ideas from S. Ewald, 10/1998
                       Fixed target_id for older Saturn sats 9/1999
	







SEDR_GET_SEDRUPD
----------------


 PURPOSE:
	Returns a sedrupd record from an IDL sedrupd file.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	result = sedr_get_sedrupd(sctime, planet, source)


 ARGUMENTS:
  INPUT:

	sctime:		Spacecraft time (FDS count x 100)

       planet:         Planet, one of 'jupiter', 'saturn',
                       'uranus' or 'neptune'.  

	source:		One of 'DAVI', 'NAV ', 'FARE', 'NAV2', 'NEAR', 'AMOS'. 


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


  ENVIRONMENT VARIABLES:
	NV_SEDR_DATA:	Directory containing the SEDR data files.  The 
			variable should contain a trailing slash.


 RETURN:
	A sedrupd record.


 PROCEDURE:
	Opens a sedrupd and its index file, then returns the appropriate
	unpacked sedrupd record. It requires that the environment
       variable NV_SEDR_DATA be set to the directory containing the
       files.  The variable should contain a trailing slash.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	Haemmerle, 1/1999
                       using some ideas from S. Ewald, 10/1998
	






SEDR_LIST
---------


 PURPOSE:
	Lists sedr2 and sedrupd records at a given sctime or for a given
	data descriptor and returns the number or sedr records and updates.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	count = sedr_list([dd=dd],[sctime=sctime])


 ARGUMENTS:
  INPUT: NONE


  OUTPUT: NONE


 KEYWORDS:
  INPUT:

	    dd:		A data descriptor containing a Voyager VICAR
			header

       sctime:         Spacecraft time (FDS count x 100)

       planet:         Planet, if given, one of 'jupiter', 'saturn',
                       'uranus' or 'neptune'.  If not given, uses
                       sctime to guess.

	silent:		If set, function produces no output.

  OUTPUT: NONE


 RETURN:
	Returns the number of sedr records found (original + updates).


 PROCEDURE:
	Finds the SEDR2 record for sctime and then searchs for updates
	among all valid sources.


 RESTRICTIONS:
	None.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	Haemmerle, 1/1999
	





SEDR_READ
---------


 PURPOSE:
	Reads a sedr2 and sedrupd file at a given sctime.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	result = sedr_read(sctime)


 ARGUMENTS:
  INPUT:

	sctime:		Spacecraft time (FDS count x 100)


  OUTPUT: NONE


 KEYWORDS:
  INPUT:

       planet:         Planet, if given, one of 'jupiter', 'saturn',
                       'uranus' or 'neptune'.  If not given, uses
                       sctime to guess.

       source:         SEDR source, if given one of 'SEDR', 'DAVI',
                       'NAV ', 'FARE', 'NAV2', 'NEAR', 'AMOS'.  If
                       not given, then default is 'SEDR'

  OUTPUT: NONE


 PROCEDURE:


 RESTRICTIONS:


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	Haemmerle, 1/1999
                       using some ideas from S. Ewald, 10/1998
	













SEDR_TIME
---------


 PURPOSE:
	Find seconds past 1950 from sedr.


 CATEGORY:
       UTIL/SEDR


 CALLING SEQUENCE:
       result = sedr_time(sedr)


 ARGUMENTS:
  INPUT:

	sedr:		A sedr2 type structure.


  OUTPUT: NONE


 STATUS:
	Complete.


 MODIFICATION HISTORY:
	Written by:     Haemmerle, 1/1999



































SEDR_TO_NV
----------


 PURPOSE:
	Converts a C matrix to NV definition.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	result = sedr_to_nv(matrix)


 ARGUMENTS:
  INPUT:

	matrix:		A C matrix from sedr_buildcm()

  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 PROCEDURE:
	The C-matrix defines the optic axis as the Z or 3rd axis. However, nv
	defines the optic axis as the Y (b1) or 2nd axis for the C-matrix
	and the pole also as the 2nd axis.  This procedure switches the
	2nd and third columns in a matrix given to it so that it follows
	the nv definition.


 RESTRICTIONS:
	NONE.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	Haemmerle, 1/1999
	

















SEDR_UNPACK_BCONS
-----------------


 PURPOSE:
	Unpacks the body constants record from platform-independent to platform
       format or vis-versa.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	sedr_unpack_bcons, bconst 


 ARGUMENTS:
  INPUT:

	bconst:		A bconst formatted record read from a bcons file.


  OUTPUT: NONE


 KEYWORDS:
  INPUT:

	pack:		If set, reverses the process.

  OUTPUT:


 PROCEDURE:
	Floating and double precision numbers are converted from XDR format
	to host floating format while integers are byteswapped into host
	format.  If /pack is set, the process is reversed.


 RESTRICTIONS:
	NONE.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
	Written by:    Haemmerle, 12/1998
	















SEDR_UNPACK_SEDR2
-----------------


 PURPOSE:
	Unpacks the sedr2 record from platform-independent to platform
       format or vis-versa.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	sedr_unpack_sedr2, sedr


 ARGUMENTS:
  INPUT:

	sedr:		A sedr2 formatted record read from a sedr file.


  OUTPUT: NONE


 KEYWORDS:
  INPUT:

	pack:		If set, reverses the process.


  OUTPUT: NONE


 PROCEDURE:
	Floating and double precision numbers are converted from XDR format
	to host floating format while integers are byteswapped into host
	format.  If /pack is set, the processes is reversed.


 RESTRICTIONS:
	NONE.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	S. Ewald, 10/1998
	Modified by:    Haemmerle, 12/1998
	













SEDR_UNPACK_SEDRUPD
-------------------


 PURPOSE:
	Unpacks the sedrupd record from platform-independent to platform
       format or vis-versa.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	sedr_unpack_sedrupd, upd


 ARGUMENTS:
  INPUT:

	upd:		A sedrupd formatted record read from a sedru file.


  OUTPUT: NONE


 KEYWORDS:
  INPUT:

	pack:		If set, the process is reversed.

  OUTPUT: NONE


 PROCEDURE:
	Floating and double precision numbers are converted from XDR format
	to host floating format while integers are byteswapped into host
	format.  If /pack is set, the process is reversed.


 RESTRICTIONS:
	NONE.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
 	Written by:	S. Ewald, 10/1998
	Modified by:    Haemmerle, 12/1998
	














SEDR_VGR_CAMERAS
----------------


 PURPOSE:
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv camera descriptor

 CATEGORY:
	UTIL/SEDR


 RESTRICTIONS:
	By default, Voyager values return B1950 co-ordinates


 MODIFICATION HISTORY:
       Written by:     Haemmerle, 1/1999
















































SEDR_VGR_INPUT
--------------


 PURPOSE:
	Input translator for Voyager images using SEDR database.


 CATEGORY:
	NV/CONFIG


 CALLING SEQUENCE(only to be called by nv_get_value):
	result = sedr_vgr_input(dd, keyword)


 ARGUMENTS:
  INPUT:
	dd:		Data descriptor.

	keyword:	String giving the name of the translator quantity.

  OUTPUT:
	NONE


 KEYWORDS:
  INPUT:
	key1:		Camera descriptor.

  OUTPUT:
	status:		Zero if valid data is returned.

	n_obj:		Number of objects returned.

	dim:		Dimensions of return objects.


  TRANSLATOR KEYWORDS:
	j2000:		If set, returned quantites are rotated to j2000
			reference frame.  Otherwise, results are b1950.

	sedr_source:	String giving the name of the SEDR update source to use.
			Default is 'SEDR'.


  ENVIRONMENT VARIABLES:
	NV_SEDR_DATA:	Directory containing the SEDR data files.  The 
			variable should contain a trailing slash.


 RETURN:
	Data associated with the requested keyword.


 STATUS:
	Complete


 MODIFICATION HISTORY:
 	Written by:	VRH
	




SEDR_VGR_PLANETS
----------------


 PURPOSE:
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv planet descriptor

 CATEGORY:
	UTIL/SEDR


 RESTRICTIONS:
	By default, Voyager values return B1950 co-ordinates


 MODIFICATION HISTORY:
       Written by:     Haemmerle, 1/1999
















































SEDR_VGR_SUN
------------


 PURPOSE:
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv planet descriptor

 CATEGORY:
	UTIL/SEDR


 RESTRICTIONS:
	By default, Voyager values return B1950 co-ordinates


 MODIFICATION HISTORY:
       Written by:     Spitale, 2/2002
















































SEDR_VGR_TARGETS
----------------


 PURPOSE:
	To be called by Voyager SEDR input translator or similar procedure to
	convert sedr values to an nv planet descriptor

 CATEGORY:
	UTIL/SEDR


 RESTRICTIONS:
	By default, Voyager values return B1950 co-ordinates


 MODIFICATION HISTORY:
       Written by:     Haemmerle, 1/1999
















































VICAR_VGRKEY
------------


 PURPOSE:
	Return keyword values from a Voyager vicar label.


 CATEGORY:
	UTIL/SEDR


 CALLING SEQUENCE:
	result = vicar_vgrkey(label, keyword) 


 ARGUMENTS:
  INPUT:

	label:		A label/header from a Voyager VICAR image

	keyword:	A string array of one or more supported keywords:
			SCNUM : Spacecraft number (1 or 2) 
			FDS   : Flight Data Subsystem count (hhhhh.mm)
			SCTIME: FDS x 100 (no decimal)
			PICNO : Picture number (nnnnPm+ddd) 
			PLANET: Planet of encounter (from PICNO)
			SCET  : Spacecraft Event Time (yy.ddd hh:mm:ss)
			ERT   : Earth Receive Time (yy.ddd hh:mm:ss) 
			CAMERA: Image camera (NA or WA) 
			EXP   : Exposure in milliseconds 
			FILNUM: Filter wheel position number 
			FILTER: Filter 
			SCAN  : Scan rate (1, 3, 5, or 10) 
			MODE  : Camera mode (NAONLY, WAONLY or BOTSIM) 
			GAIN  : Camera gain (LO or HI) 


  OUTPUT: NONE


 KEYWORDS:
  INPUT: NONE

  OUTPUT: NONE


 PROCEDURE:
	Searchs a Voyager VICAR label for supported input keyword values
	and returns them as an array of strings.  If the number of values
	is one, then a scalar is returned rather than an array of dim =[1]


 RESTRICTIONS:
	NONE.


 STATUS:
	Complete.


 MODIFICATION HISTORY:
	Written by:    Haemmerle, 1/1999
	               using ideas from S. Ewald 10/98
	               and the VICAR routine ABLE77V2
	


































































